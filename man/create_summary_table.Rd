% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions.R
\name{create_summary_table}
\alias{create_summary_table}
\title{Create Summary Statistics Table}
\usage{
create_summary_table(
  x,
  design = NULL,
  stat = NULL,
  label_trim = 0,
  padding_sym = "   ",
  padding_pos = "left",
  ...
)
}
\arguments{
\item{x}{Either... 1) A character string, giving
the variable names (or labels for empty rows)
to summarize, 2) the data frame of observations
to summarize, 3) the summary table, to strip
away the design elements for the final
nice-looking product, or 4) a list of 3-item character
strings, giving [1] the label, [2] the variable name,
and [3] the type, category, number of digits, and level,
separated by the pipe symbol.}

\item{design}{A data frame specifying the design
of the summary table - columns for the
summary table are iteratively added to
this data frame.}

\item{stat}{A function computing the summary
statistics and returning a character string.
To create a custom function, modify the
function returned by calling
\code{create_summary_table} with \code{x}
equal to \code{NULL}.}

\item{label_trim}{The number of characters to
trim away (starting from the left) when
initializing the 'Label' column in the
design data frame.}

\item{padding_sym}{The set of characters to use when
creating padding for instances of the 'Level' column
set to 2.}

\item{padding_pos}{Whether padding should be applied to
the left or right.}

\item{...}{Additional parameters to pass to the
internal \code{stat} function.}
}
\value{
A 'design' data frame, with columns for
summary statistics added iteratively, and
final post-processing calls to remove the design
elements to create the final summary table.
}
\description{
A function to build (in iterative fashion)
a table of summary statistics for a data
set that can then be passed on to functions
like \code{\link{create_ft}}.
}
\details{
The \code{create_summary_table} function can be
  used to create summary tables with complex formatting
  that are easy to convert into APA-style tables via the
  \code{\link{create_ft}} function. Table creation proceeds
  in four steps.

  First, the user provides a vector of names to the function.
  Names matching columns in the data frame of observations
  will have summary statistics computed. Non-matching
  names will result in blank rows - this provides a simple
  way to produce section headings for subsets of rows.
  The function will output a 'design' data frame, with
  each column specifying processing details to use when
  generating the corresponding rows of the summary table.

  Second, the user modifies the details of the 'design'
  matrix. Users can change the row labels (i.e., the
  first column) via the 'Label' column. Users can
  specify the type of summary statistics to compute
  via the 'Type' column (by default, 0 = blank,
  1 = counts (%), 2 = mean (SD), 3 = sample size).
  For categorical variables, users can specify the
  level over which to compute counts and percentages
  via the 'Category' column. The 'Digits' column
  can be used to determine the number of digits to
  round to when computing summary statistics.
  Finally, the 'Level' column controls padding
  as applied to the row labels. If values for
  'Level' are set to \code{2}, the function
  will shift the row labels by the \code{padding_sym}
  characters based on the setting of \code{padding_pos}.

  Third, the user adds new columns in iterative
  fashion via multiple calls to \code{create_summary_table},
  with the data frame of observations and the
  updated 'design' data frame from the previous call
  as the \code{x} and \code{design} arguments.

  Fourth, once all desired columns have been added, the
  user makes one final call to \code{create_summary_table},
  passing in the final version of the 'design' data frame.
  This call strips away all design columns from the
  data frame, leaving the final version of the summary
  table with the desired formatting.
}
\examples{
# Example data set
data( "iris" )
# Variables to summarize
rws = colnames( iris )[1:4]
# Add rows for sectioning
rws = c( 'Sepal', rws[1:2], 'Petal', rws[3:4] )
# Initialize data frame specifying design
design = create_summary_table( rws )

# Indicate rows to report mean (SD) and
# rows to leave blank
design$Type = 2; design$Type[c(1,4)] = 0
# Create nice labels
design$Label[c(2,3,5,6)] = rep( c('Length','Width'), 2 )
# Shift length/width rows via padding
design$Level[c(2,3,5,6)] = 2

# Create table
st = create_summary_table( iris, design, padding_pos = "right" )
# Create new column with summary only for
# 'setosa' species
st = iris \%>\%
  filter( Species == 'setosa' ) \%>\%
  create_summary_table( design = st )

# Remove design elements for nice looking table
st = create_summary_table( st )
colnames( st ) = c( 'Measures', 'All', 'Setosa' )
st

# Specify full design via list with...
# [1] Label
# [2] Variable name
# [3] Type|Category|Digits|Level
lst = list(
  c( "Length", "", "0|NA|NA|1"),
  c( "Sepal", colnames(iris)[1], "2|NA|1|2" ),
  c( "Petal", colnames(iris)[3], "2|NA|1|2" ),
  c( "Width", "", "0|NA|NA|1"),
  c( "Sepal", colnames(iris)[2], "2|NA|1|2" ),
  c( "Petal", colnames(iris)[3], "2|NA|1|2" )
)
design = create_summary_table( lst )
st = iris \%>\% create_summary_table( design = design )
st = create_summary_table( st )

}
